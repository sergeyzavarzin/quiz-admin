{"version":3,"sources":["img/Albicy_240x240.jpg","img/Voron_240x240.jpg","img/Ponkr_240x240.jpg","img/Renf_240x240.jpg","img/Khvo_240x240.jpg","img/Holli_240x240.jpg","img/Abro_240x240.jpg","img/Zub_240x240.jpg","img/Poni_240x240.jpg","img/Tom_240x240.jpg","img/Tru_240x240.jpg","img/Iver_240x240.jpg","img/Ayon_240x240.jpg","img/Pukh_240x240.jpg","img/logo.svg","utils/createTranslitId.js","constants/endpoints.js","constants/merchTypes.js","contexts/AppContext/index.js","constants/players.js","pages/Matches/index.js","pages/Rivals/index.js","pages/Merch/index.js","pages/Orders/index.js","pages/Statistics/index.js","pages/Notifications/index.js","pages/Login/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","createTranslitId","text","cyrillicToTranslit","transform","replace","toUpperCase","BASE_API_URL","TYPES","DIGITAL","PHYSICAL","AppContext","React","createContext","withAppContext","Component","props","Consumer","state","context","AppProvider","isAppLoaded","rivals","matches","merch","orders","notifications","statistics","loadAppData","fetchMatches","fetchRivals","fetchMerch","fetchOrders","fetchStatistics","Promise","all","then","setState","finally","a","axios","get","data","createRival","id","name","logo","cb","post","prevState","catch","err","console","log","updateRival","map","rival","updateMerch","image","price","description","type","count","item","createMatch","rivalId","place","startDateTime","buyTicketsUrl","createMerch","values","createDigitalMerchValues","items","merchId","orderId","value","deleteMatch","filter","deleteRival","deleteMerch","setMatchResults","firstFive","score","twoScore","threeScore","tossing","foundIndex","findIndex","match","changeOrderStatus","status","fetchNotifications","createNotification","message","response","notificationData","error","localStorage","getItem","this","Provider","fetchNotificationList","children","ROLES","players","number","role","age","height","weight","country","photo","Albicy","images","Voronov","Ponkrashov","Renfro","Khvorostov","Hollinz","Abromajtiz","Zubkov","Ponitka","Thomas","Trushkin","Iverson","Ayon","Pushkov","Option","Select","DATE_FORMAT","MODALS","ADD_MATCH","EDIT_MATCH","activeModal","selectedMatch","isMatchPosting","renderColumns","title","dataIndex","render","record","find","moment","format","length","style","textAlign","color","background","borderRadius","width","playerId","key","theme","twoToneColor","fontSize","onClick","marginRight","okText","cancelText","onConfirm","onModalClose","CreateMatchForm","Form","create","form","getFieldDecorator","validateFields","onSubmit","e","preventDefault","className","Item","rules","required","placeholder","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","showTime","defaultValue","initialValue","allowClear","marginTop","htmlType","block","MatchResultsForm","setFields","selectedMatchId","clubScore","rivalScore","intFirstFive","parseInt","errors","Error","disabled","label","mode","player","Group","compact","loading","dataSource","sort","b","utc","diff","columns","rowKey","pagination","pageSize","visible","onCancel","footer","isModalVisible","editingRivalId","src","alt","some","handleModalOk","onOk","onChange","target","marginBottom","DEFAULT_MERCH_COUNT","editingMerchId","MerchForm","getFieldValue","isDigital","trim","cnt","TextArea","DELIVERY","MATCH","POST","STATUSES","CREATED","AWAITING_EXTRADITION","SENDED","DELIVERED","selectedOrder","firstName","lastName","href","rel","additionalInfoRender","city","address","postIndex","email","phone","comment","ChangeOrderStatusForm","order","createDateTime","Object","keys","expandedRowRender","nextProps","userId","orderInfo","JSON","parse","deliveryAddress","users","activeUsers","stat","voteAnswers","size","setMessage","currentTarget","rows","paddingBottom","itemLayout","renderItem","info","initiator","successful","failed","total","actions","Meta","Login","login","password","logins","includes","passwords","setItem","window","location","reload","Header","Layout","Content","Footer","Menu","withRouter","pathname","minHeight","position","zIndex","Logo","float","display","alignItems","defaultSelectedKeys","slice","defaultOpenKeys","lineHeight","to","clear","marginLeft","padding","path","exact","component","Matches","Rivals","Merch","Orders","Statistics","Notifications","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9ff64f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Albicy_240x240.ca67f48b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Voron_240x240.8836abf4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ponkr_240x240.4110abcc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Renf_240x240.72131066.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Khvo_240x240.9c283299.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Holli_240x240.784d97d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Abro_240x240.53559671.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zub_240x240.1dad6f51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Poni_240x240.e6ab6ed5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tom_240x240.82c182d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tru_240x240.001ce0de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Iver_240x240.a2c9df28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ayon_240x240.cfedbe27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pukh_240x240.b701f28d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.4bc4a0cd.svg\";","import cyrillicToTranslit from 'cyrillic-to-translit-js';\r\n\r\nconst createTranslitId = (text) => cyrillicToTranslit().transform(text.replace(/\\s+/g, '-').replace('%', '').toUpperCase()).toUpperCase();\r\n\r\nexport default createTranslitId;\r\n","export const BASE_API_URL = process.env.NODE_ENV === 'development' ?\r\n  'http://localhost:8080' : 'https://zen-quiz-api.herokuapp.com';\r\n","export const TYPES = {\r\n  DIGITAL: 'DIGITAL',\r\n  PHYSICAL: 'PHYSICAL',\r\n};\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {BASE_API_URL} from '../../constants/endpoints';\r\n\r\nimport {TYPES} from '../../constants/merchTypes';\r\n\r\nexport const AppContext = React.createContext(true);\r\n\r\nclass AppProvider extends Component {\r\n\r\n  state = {\r\n    isAppLoaded: false,\r\n    rivals: [],\r\n    matches: [],\r\n    merch: [],\r\n    orders: [],\r\n    notifications: null,\r\n    statistics: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('isAuth')) {\r\n      this.loadAppData();\r\n    }\r\n  }\r\n\r\n  loadAppData = () => {\r\n    const {fetchMatches, fetchRivals, fetchMerch, fetchOrders, fetchStatistics} = this;\r\n    Promise.all([fetchMatches(), fetchRivals(), fetchMerch(), fetchOrders(), fetchStatistics()])\r\n      .then(([matches, rivals, merch, orders, statistics]) => this.setState({matches, rivals, merch, orders, statistics}))\r\n      .finally(() => this.setState({isAppLoaded: true}))\r\n  };\r\n\r\n  fetchRivals = async () => {\r\n    const rivals = await axios.get(`${BASE_API_URL}/rival`);\r\n    return rivals.data;\r\n  };\r\n\r\n  fetchMatches = async () => {\r\n    const matches = await axios.get(`${BASE_API_URL}/match`);\r\n    return matches.data;\r\n  };\r\n\r\n  fetchMerch = async () => {\r\n    const rivals = await axios.get(`${BASE_API_URL}/merch`);\r\n    return rivals.data;\r\n  };\r\n\r\n  fetchOrders = async () => {\r\n    const orders = await axios.get(`${BASE_API_URL}/order`);\r\n    return orders.data;\r\n  };\r\n\r\n  fetchStatistics = async () => {\r\n    const statistics = await axios.get(`${BASE_API_URL}/statistics`);\r\n    return statistics.data;\r\n  };\r\n\r\n  createRival = (id, name, logo, cb) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/rival/create`, {id, name, logo})\r\n      .then(({data}) => this.setState(prevState => {\r\n        return {rivals: [data, ...prevState.rivals]}\r\n      }))\r\n      .catch(err => console.log(err))\r\n      .finally(() => cb && cb());\r\n  };\r\n\r\n  updateRival = (id, name, logo, cb) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/rival/${id}/update`, {name, logo})\r\n      .then(({data}) => this.setState(({rivals}) => {\r\n        return {rivals: rivals.map(rival => rival.id === data.id ? data : rival)}\r\n      }))\r\n      .catch(err => console.log(err))\r\n      .finally(() => cb && cb());\r\n  };\r\n\r\n  updateMerch = (id, name, image, price, description, type, count, cb = null) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/merch/${id}/update`, {name, image, price, description, type, count})\r\n      .then(({data}) => this.setState(({merch}) => {\r\n        return {merch: merch.map(item => item.id === data.id ? data : item)}\r\n      }))\r\n      .catch(err => console.log(err))\r\n      .finally(() => cb && cb());\r\n  };\r\n\r\n  createMatch = (id, rivalId, place, startDateTime, buyTicketsUrl, cb = null) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/match/create`, {id, rivalId, place, startDateTime, buyTicketsUrl})\r\n      .then(({data}) => this.setState(prevState => {\r\n        return {matches: [data, ...prevState.matches]}\r\n      }))\r\n      .catch(err => console.log(err))\r\n      .finally(() => cb && cb());\r\n  };\r\n\r\n  createMerch = (id, name, image, price, description, type, values, count, cb = null) => {\r\n    const data = {id, name, image, price, description, type, count};\r\n    axios\r\n      .post(`${BASE_API_URL}/merch/create`, data)\r\n      .then(({data}) => this.setState(prevState => {\r\n          return {merch: [data, ...prevState.merch]}\r\n        }, () => type === TYPES.DIGITAL ?\r\n        this.createDigitalMerchValues(id, values, cb) : (!!cb && cb())\r\n      ))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  createDigitalMerchValues = (id, values, cb = null) => {\r\n    const items = values.map(item => {\r\n      return {\r\n        merchId: id,\r\n        orderId: 'null',\r\n        value: item,\r\n      }\r\n    });\r\n    axios\r\n      .post(`${BASE_API_URL}/digital`, {items})\r\n      .finally(() => !!cb && cb())\r\n  };\r\n\r\n  deleteMatch = (id) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/match/${id}/delete`)\r\n      .then(() => this.setState(({matches}) => {\r\n        return {\r\n          matches: matches.filter(item => item.id !== id)\r\n        }\r\n      }))\r\n  };\r\n\r\n  deleteRival = (id) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/rival/${id}/delete`)\r\n      .then(() => this.setState(({rivals}) => {\r\n        return {\r\n          rivals: rivals.filter(item => item.id !== id)\r\n        }\r\n      }))\r\n  };\r\n\r\n  deleteMerch = (id) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/merch/${id}/delete`)\r\n      .then(() => this.setState(({merch}) => {\r\n        return {\r\n          merch: merch.filter(item => item.id !== id)\r\n        }\r\n      }))\r\n  };\r\n\r\n  setMatchResults = (id, firstFive, score, twoScore, threeScore, tossing, cb) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/match/${id}/setresult`, {firstFive, score, twoScore, threeScore, tossing: !!tossing})\r\n      .then(({data}) => this.setState(prevState => {\r\n        let matches = prevState.matches;\r\n        const foundIndex = matches.findIndex(match => match.id === id);\r\n        matches[foundIndex] = data;\r\n        return {matches}\r\n      }))\r\n      .catch(err => console.log(err))\r\n      .finally(() => cb && cb());\r\n  };\r\n\r\n  changeOrderStatus = (id, status, cb) => {\r\n    axios\r\n      .post(`${BASE_API_URL}/order/${id}/update`, {status})\r\n      .then(({data}) => {\r\n        this.setState(prevState => {\r\n          return {\r\n            orders: prevState.orders.map(item => item.id === data.id ? data : item)\r\n          }\r\n        }, () => cb && cb());\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  fetchNotifications = async () => {\r\n    const notifications = await axios.get(`${BASE_API_URL}/notification`);\r\n    this.setState({notifications: notifications.data});\r\n  };\r\n\r\n  createNotification = message => {\r\n    axios\r\n      .post(`${BASE_API_URL}/notification`, {message})\r\n      .then(response => this.setState(prevState => {\r\n        return {\r\n          notifications: [ response.data.notificationData, ...prevState.notifications]\r\n        }\r\n      }))\r\n      .catch(error => console.log(error))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider\r\n        value={{\r\n          state: this.state,\r\n\r\n          createRival: this.createRival,\r\n          createMatch: this.createMatch,\r\n          createMerch: this.createMerch,\r\n\r\n          updateRival: this.updateRival,\r\n          updateMerch: this.updateMerch,\r\n\r\n          deleteMerch: this.deleteMerch,\r\n          deleteMatch: this.deleteMatch,\r\n          deleteRival: this.deleteRival,\r\n\r\n          setMatchResults: this.setMatchResults,\r\n          changeOrderStatus: this.changeOrderStatus,\r\n\r\n          fetchNotificationList: this.fetchNotificationList,\r\n          fetchNotifications: this.fetchNotifications,\r\n          createNotification: this.createNotification,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport function withAppContext(Component) {\r\n  return function WrapperComponent(props) {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {state => <Component {...props} context={state}/>}\r\n      </AppContext.Consumer>\r\n    );\r\n  };\r\n}\r\n\r\nexport default AppProvider;\r\n","import Albicy from '../img/Albicy_240x240.jpg';\r\nimport Voronov from '../img/Voron_240x240.jpg';\r\nimport Ponkrashov from '../img/Ponkr_240x240.jpg';\r\nimport Renfro from '../img/Renf_240x240.jpg';\r\nimport Khvorostov from '../img/Khvo_240x240.jpg';\r\nimport Hollinz from '../img/Holli_240x240.jpg';\r\nimport Abromajtiz from '../img/Abro_240x240.jpg';\r\nimport Zubkov from '../img/Zub_240x240.jpg';\r\nimport Ponitka from '../img/Poni_240x240.jpg';\r\nimport Thomas from '../img/Tom_240x240.jpg';\r\nimport Trushkin from '../img/Tru_240x240.jpg';\r\nimport Iverson from '../img/Iver_240x240.jpg';\r\nimport Ayon from '../img/Ayon_240x240.jpg';\r\nimport Pushkov from '../img/Pukh_240x240.jpg';\r\n\r\nconst ROLES = {\r\n  CENTER: 'Центровой',\r\n  FORWARD: 'Форвард',\r\n  GUARD: 'Защитник',\r\n};\r\n\r\nconst players = [\r\n  {\r\n    id: 1,\r\n    name: 'Эндрю Альбиси',\r\n    number: 6,\r\n    role: ROLES.GUARD,\r\n    age: 29,\r\n    height: 178,\r\n    weight: 77,\r\n    country: 'Франция',\r\n    photo: Albicy,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Евгений Воронов',\r\n    number: 18,\r\n    role: ROLES.GUARD,\r\n    age: 33,\r\n    height: 194,\r\n    weight: 95,\r\n    country: 'Россия',\r\n    photo: Voronov,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Антон Понкрашов',\r\n    number: 7,\r\n    role: ROLES.GUARD,\r\n    age: 33,\r\n    height: 200,\r\n    weight: 93,\r\n    country: 'Россия',\r\n    photo: Ponkrashov,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Алекс Ренфро',\r\n    number: 12,\r\n    role: ROLES.GUARD,\r\n    age: 33,\r\n    height: 191,\r\n    weight: 80,\r\n    country: 'США',\r\n    photo: Renfro,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Дмитрий Хвостов',\r\n    number: 13,\r\n    role: ROLES.GUARD,\r\n    age: 30,\r\n    height: 190,\r\n    weight: 84,\r\n    country: 'Россия',\r\n    photo: Khvorostov,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Остин Холлинз',\r\n    number: 9,\r\n    role: ROLES.GUARD,\r\n    age: 27,\r\n    height: 193,\r\n    weight: 86,\r\n    country: 'США',\r\n    photo: Hollinz,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Тим Абромайтис',\r\n    number: 21,\r\n    role: ROLES.GUARD,\r\n    age: 30,\r\n    height: 203,\r\n    weight: 107,\r\n    country: 'США',\r\n    photo: Abromajtiz,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Андрей Зубков',\r\n    number: 20,\r\n    role: ROLES.GUARD,\r\n    age: 28,\r\n    height: 205,\r\n    weight: 100,\r\n    country: 'Россия',\r\n    photo: Zubkov,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Матеуш Понитка',\r\n    number: 25,\r\n    role: ROLES.GUARD,\r\n    age: 26,\r\n    height: 198,\r\n    weight: 95,\r\n    country: 'Польша',\r\n    photo: Ponitka,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Уилл Томас',\r\n    number: 10,\r\n    role: ROLES.GUARD,\r\n    age: 33,\r\n    height: 203,\r\n    weight: 104,\r\n    country: 'США',\r\n    photo: Thomas,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Владислав Трушкин',\r\n    number: 16,\r\n    role: ROLES.GUARD,\r\n    age: 26,\r\n    height: 201,\r\n    weight: 103,\r\n    country: 'Россия',\r\n    photo: Trushkin,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Колтон Айверсон',\r\n    number: 4,\r\n    role: ROLES.GUARD,\r\n    age: 30,\r\n    height: 213,\r\n    weight: 116,\r\n    country: 'США',\r\n    photo: Iverson,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'Густаво Айон',\r\n    number: 34,\r\n    role: ROLES.GUARD,\r\n    age: 34,\r\n    height: 208,\r\n    weight: 113,\r\n    country: 'Мексика',\r\n    photo: Ayon,\r\n    images: [],\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Антон Пушков',\r\n    number: 14,\r\n    role: ROLES.GUARD,\r\n    age: 30,\r\n    height: 208,\r\n    weight: 100,\r\n    country: 'Россия',\r\n    photo: Pushkov,\r\n    images: [],\r\n  },\r\n];\r\n\r\nexport default players;\r\n","import React from 'react';\r\nimport {Table, Button, Modal, Input, Form, Select, DatePicker, Tag, Icon, Popconfirm} from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport createTranslitId from '../../utils/createTranslitId';\r\n\r\nimport {withAppContext} from '../../contexts/AppContext';\r\n\r\nimport players from '../../constants/players';\r\n\r\nimport './Matches.scss';\r\n\r\nconst {Option} = Select;\r\n\r\nconst DATE_FORMAT = 'DD.MM.YYYY HH:mm';\r\n\r\nconst MODALS = {\r\n  ADD_MATCH: 'ADD_MATCH',\r\n  EDIT_MATCH: 'EDIT_MATCH',\r\n};\r\n\r\nclass Matches extends React.Component {\r\n\r\n  state = {\r\n    activeModal: null,\r\n    selectedMatch: null,\r\n    isMatchPosting: false,\r\n  };\r\n\r\n  renderColumns = () => {\r\n    const {deleteMatch} = this.props.context;\r\n    return [\r\n      {\r\n        title: 'Соперник',\r\n        dataIndex: 'rival',\r\n        render: (text, record) => {\r\n          const {rivals} = this.props.context.state;\r\n          const rival = rivals.find(rival => rival.id === record.rivalId);\r\n          return (\r\n            <>\r\n              {rival && rival.name}\r\n            </>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: 'Начало матча',\r\n        dataIndex: 'startDateTime',\r\n        render: (text, record) => <>\r\n          <span>{moment(record.startDateTime).format(DATE_FORMAT)}</span>\r\n        </>\r\n      },\r\n      {\r\n        title: 'Место',\r\n        dataIndex: 'place',\r\n      },\r\n      {\r\n        title: 'Счет',\r\n        dataIndex: 'score',\r\n        render: (text, {score}) => (score && score.length) ?\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              color: '#fff',\r\n              background: score[0] > score[1] ? 'green' : 'red',\r\n              borderRadius: '7px',\r\n            }}\r\n          >\r\n            <span>{score[0]}</span> : <span>{score[1]}</span>\r\n          </div> : <></>\r\n      },\r\n      {\r\n        title: 'Стартовая пятерка',\r\n        dataIndex: 'firstFive',\r\n        width: '10%',\r\n        render: (text, {firstFive}) => firstFive && firstFive.length ? <>\r\n          {\r\n            firstFive.map(playerId =>\r\n              <Tag key={playerId}>\r\n                {players.find(item => item.id === playerId).name}\r\n              </Tag>\r\n            )\r\n          }\r\n        </> : <></>\r\n      },\r\n      {\r\n        title: 'Два очка',\r\n        dataIndex: 'twoScore',\r\n        render: (text, {twoScore}) => twoScore && <Tag>\r\n          {\r\n            players.find(item => item.id === twoScore).name\r\n          }\r\n        </Tag>\r\n      },\r\n      {\r\n        title: 'Три очка',\r\n        dataIndex: 'threeScore',\r\n        render: (text, {threeScore}) => threeScore && <Tag>\r\n          {\r\n            players.find(item => item.id === threeScore).name\r\n          }\r\n        </Tag>\r\n      },\r\n      {\r\n        title: 'Вбрасывание',\r\n        dataIndex: 'tossing',\r\n        render: (text, {score, tossing}) => score && score.length ?\r\n          <Icon\r\n            theme='twoTone'\r\n            type={!!tossing ? 'check-circle' : 'close-circle'}\r\n            twoToneColor={!!tossing ? '#52c41a' : 'red'}\r\n            style={{fontSize: '28px'}}\r\n          /> : <></>\r\n      },\r\n      {\r\n        title: 'Действия',\r\n        dataIndex: 'operation',\r\n        render: (text, record) => record.score && record.score.length ? <></> : <>\r\n          <Button\r\n            type='primary'\r\n            onClick={() => this.setState({\r\n              activeModal: MODALS.EDIT_MATCH,\r\n              selectedMatch: record.id,\r\n            })}\r\n            style={{marginRight: 15}}\r\n          >\r\n            Объявить результат\r\n          </Button>\r\n          <Popconfirm\r\n            title='Вы уверены?'\r\n            okText='Да'\r\n            cancelText='Нет'\r\n            onConfirm={() => deleteMatch(record.id)}\r\n          >\r\n            <Button type='danger'>Удалить</Button>\r\n          </Popconfirm>\r\n        </>\r\n      },\r\n    ];\r\n  };\r\n\r\n  onModalClose = () => {\r\n    this.setState({\r\n      activeModal: null,\r\n    })\r\n  };\r\n\r\n  CreateMatchForm = Form.create({name: 'CreateMatchForm'})(({form}) => {\r\n    const {getFieldDecorator, validateFields} = form;\r\n    const {createMatch, state: {rivals}} = this.props.context;\r\n    const handleCreateMatch = (e) => {\r\n      e.preventDefault();\r\n      this.setState({isMatchPosting: true});\r\n      validateFields((err, {rivalId, place, startDateTime, buyTicketsUrl}) => {\r\n        if (!err) {\r\n          const FORMAT = 'DD-MM-YY-HH-mm-ss';\r\n          const id = createTranslitId(`${rivals.find(rival => rival.id === rivalId).name}${moment(startDateTime).format(FORMAT)}`);\r\n          createMatch(id, rivalId, place, startDateTime, buyTicketsUrl, () => this.setState({\r\n            isMatchPosting: false, activeModal: null\r\n          }))\r\n        }\r\n      });\r\n    };\r\n    return (\r\n      <Form onSubmit={handleCreateMatch} className='create-match'>\r\n        <Form.Item>\r\n          {getFieldDecorator('rivalId', {\r\n            rules: [{required: true, message: 'Выберите соперника'}],\r\n          })(\r\n            <Select\r\n              placeholder='Выберите соперинка'\r\n              showSearch\r\n              optionFilterProp='children'\r\n              filterOption={(input, option) =>\r\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {rivals.map(({id, name}) => <Option key={id} value={id}>{name}</Option>)}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('startDateTime', {\r\n            rules: [{required: true, message: 'Выберите дату проведения матча!'}],\r\n          })(\r\n            <DatePicker\r\n              style={{width: '100%'}}\r\n              format={DATE_FORMAT}\r\n              placeholder='Выберите дату и время'\r\n              showTime={{ format: 'HH:mm', defaultValue: moment('20:00:00', 'HH:mm') }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('place', {\r\n            rules: [{required: true, message: 'Укажите место проведения'}],\r\n          })(\r\n            <Input\r\n              type='text'\r\n              placeholder='Место проведения матча'\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('buyTicketsUrl', {\r\n            initialValue: 'https://tickets.fc-zenit.ru/basketball/tickets/#basketball&utm_campaign=prilozhenie',\r\n          })(\r\n            <Input\r\n              type='text'\r\n              placeholder='Ссылка на покупку билета на матч'\r\n              allowClear\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <div style={{fontSize: 12, marginTop: -10}}>Note: Удалите ссылку из поля если купить билеты нельзя</div>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            className='login-form-button'\r\n            block\r\n          >\r\n            Создать матч\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  });\r\n\r\n  MatchResultsForm = Form.create({name: 'MatchResultsForm'})(({form}) => {\r\n    const {getFieldDecorator, validateFields, setFields} = form;\r\n    const {setMatchResults, state: {rivals, matches}} = this.props.context;\r\n    const {selectedMatch: selectedMatchId} = this.state;\r\n    const selectedMatch = matches.find(match => match.id === selectedMatchId);\r\n    const rival = rivals.find(rival => rival.id === selectedMatch.rivalId);\r\n    const handleUpdateMatch = (e) => {\r\n      e.preventDefault();\r\n      this.setState({isMatchPosting: true});\r\n      validateFields((err, {firstFive, clubScore, rivalScore, twoScore, threeScore, tossing}) => {\r\n        const intFirstFive = firstFive.map(item => parseInt(item));\r\n        const score = [parseInt(clubScore), parseInt(rivalScore)];\r\n        if (firstFive.length !== 5) {\r\n          setFields({\r\n            'firstFive': {\r\n              value: firstFive,\r\n              errors: [new Error('Нельзя выбрать больше или меньше чем 5 игроков')],\r\n            },\r\n          });\r\n          return;\r\n        }\r\n        if (!err) {\r\n          setMatchResults(selectedMatchId, intFirstFive, score, parseInt(twoScore), parseInt(threeScore), !!tossing, () => this.setState({\r\n            isMatchPosting: false, activeModal: null\r\n          }))\r\n        }\r\n      });\r\n    };\r\n    return (\r\n      <Form onSubmit={handleUpdateMatch} className='create-match'>\r\n        <Form.Item>\r\n          <Input\r\n            disabled\r\n            value={rival.name}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            disabled\r\n            value={selectedMatch.place}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input\r\n            disabled\r\n            value={moment(selectedMatch.startDateTime).format(DATE_FORMAT)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label='Стартовая пятерка'>\r\n          {getFieldDecorator('firstFive', {\r\n            rules: [{\r\n              required: true,\r\n              message: 'Выберите стартовую пятерку',\r\n            }],\r\n          })(\r\n            <Select\r\n              placeholder='Стартовая пятерка'\r\n              mode='tags'\r\n            >\r\n              {\r\n                players.map(player =>\r\n                  <Option\r\n                    key={player.id}\r\n                  >\r\n                    {player.name}\r\n                  </Option>\r\n                )\r\n              }\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label='Кто выиграл вбрасывание'>\r\n          {getFieldDecorator('tossing', {\r\n            rules: [{required: true, message: 'Укажите кто выиграл вбрасывание'}],\r\n          })(\r\n            <Select\r\n              type='text'\r\n              placeholder='Вбрасывание выиграла команда'\r\n            >\r\n              <Option value={1}>Зенит</Option>\r\n              <Option value={0}>{rival.name}</Option>\r\n            </Select>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label='Кто первым забил двухочковый'>\r\n          {getFieldDecorator('twoScore', {\r\n            rules: [{required: true, message: 'Укажите кто первым забил два очка'}],\r\n          })(\r\n            <Select\r\n              placeholder='Первым забил два очка'\r\n            >\r\n              {\r\n                players.map(player =>\r\n                  <Option\r\n                    key={player.id}\r\n                  >\r\n                    {player.name}\r\n                  </Option>\r\n                )\r\n              }\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label='Кто первым забил трехочковый'>\r\n          {getFieldDecorator('threeScore', {\r\n            rules: [{required: true, message: 'Укажите кто первым забил два очка'}],\r\n          })(\r\n            <Select\r\n              placeholder='Первым забил два очка'\r\n            >\r\n              {\r\n                players.map(player =>\r\n                  <Option\r\n                    key={player.id}\r\n                  >\r\n                    {player.name}\r\n                  </Option>\r\n                )\r\n              }\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label='Счет'>\r\n          <Input.Group compact>\r\n            {getFieldDecorator('clubScore', {\r\n              rules: [{required: true, message: 'Укажите место проведения'}],\r\n            })(\r\n              <Input\r\n                type='number'\r\n                placeholder='Зенит'\r\n                style={{width: '50%'}}\r\n              />,\r\n            )}\r\n            {getFieldDecorator('rivalScore', {\r\n              rules: [{required: true, message: 'Укажите место проведения'}],\r\n            })(\r\n              <Input\r\n                type='number'\r\n                placeholder={rival.name}\r\n                style={{width: '50%'}}\r\n              />,\r\n            )}\r\n          </Input.Group>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            block\r\n          >\r\n            Объявить результат\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  });\r\n\r\n  render() {\r\n    const {activeModal} = this.state;\r\n    const {matches, isAppLoaded} = this.props.context.state;\r\n    const {CreateMatchForm, MatchResultsForm} = this;\r\n    return (\r\n      <div className='rivals'>\r\n        <h1>Матчи</h1>\r\n        <Table\r\n          loading={!isAppLoaded}\r\n          dataSource={matches.sort((a, b) => moment.utc(b.startDateTime).diff(moment.utc(a.startDateTime)))}\r\n          columns={this.renderColumns()}\r\n          rowKey={(record) => record.id}\r\n          pagination={{pageSize: 20}}\r\n        />\r\n        <Button\r\n          type='primary'\r\n          onClick={() => this.setState({activeModal: MODALS.ADD_MATCH})}\r\n          style={{marginTop: 15}}\r\n        >\r\n          Добавить\r\n        </Button>\r\n        <Modal\r\n          title='Добавить матч'\r\n          visible={activeModal === MODALS.ADD_MATCH}\r\n          onCancel={this.onModalClose}\r\n          footer={false}\r\n        >\r\n          <CreateMatchForm/>\r\n        </Modal>\r\n        <Modal\r\n          title='Итоги матча'\r\n          visible={activeModal === MODALS.EDIT_MATCH}\r\n          onCancel={this.onModalClose}\r\n          footer={false}\r\n        >\r\n          <MatchResultsForm/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAppContext(Matches);\r\n","import React from 'react';\r\nimport {Table, Button, Modal, Input, Popconfirm} from 'antd';\r\n\r\nimport {withAppContext} from '../../contexts/AppContext';\r\n\r\nimport createTranslitId from '../../utils/createTranslitId';\r\n\r\nimport './Rivals.scss';\r\n\r\nclass Rivals extends React.Component {\r\n\r\n  state = {\r\n    isModalVisible: false,\r\n    editingRivalId: false,\r\n    name: '',\r\n    logo: '',\r\n  };\r\n\r\n  columns = () => {\r\n    const {rivals, matches} = this.props.context.state;\r\n    const {deleteRival} = this.props.context;\r\n    return [\r\n      {\r\n        title: 'Название',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Логотип',\r\n        dataIndex: 'logo',\r\n        key: 'logo',\r\n        render: logo => <img src={logo} alt={logo} width={70}/>\r\n      },\r\n      {\r\n        title: 'Действия',\r\n        render: (text, record) => <>\r\n          <Button\r\n            style={{marginRight: 15}}\r\n            onClick={() => this.setState({\r\n              editingRivalId: record.id,\r\n              isModalVisible: true,\r\n              name: rivals.find(rival => rival.id === record.id).name,\r\n              logo: rivals.find(rival => rival.id === record.id).logo,\r\n            })}\r\n          >\r\n            Редактировать\r\n          </Button>\r\n          {\r\n            !matches.some(match => match.rivalId === record.id) &&\r\n            <Popconfirm\r\n              title='Вы уверены?'\r\n              okText='Да'\r\n              cancelText='Нет'\r\n              onConfirm={() => deleteRival(record.id)}\r\n            >\r\n              <Button type='danger'>Удалить</Button>\r\n            </Popconfirm>\r\n          }\r\n        </>\r\n      }\r\n    ]\r\n  };\r\n\r\n  onModalClose = () => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n      editingRivalId: null,\r\n      name: '',\r\n      logo: '',\r\n    })\r\n  };\r\n\r\n  handleModalOk = () => {\r\n    const {state, props, onModalClose} = this;\r\n    const {name, logo, editingRivalId} = state;\r\n    const {createRival, updateRival} = props.context;\r\n    const action = editingRivalId ? updateRival : createRival;\r\n    action(editingRivalId || createTranslitId(name), name, logo, onModalClose)\r\n  };\r\n\r\n  render() {\r\n    const {isModalVisible, editingRivalId, name, logo} = this.state;\r\n    const {rivals, isAppLoaded} = this.props.context.state;\r\n    return (\r\n      <div className='rivals'>\r\n        <h1>Соперники</h1>\r\n        <Table\r\n          dataSource={rivals}\r\n          columns={this.columns()}\r\n          rowKey={(record) => record.id}\r\n          loading={!isAppLoaded}\r\n        />\r\n        <Button\r\n          type='primary'\r\n          onClick={() => this.setState({isModalVisible: true})}\r\n          style={{marginTop: 15}}\r\n        >\r\n          Добавить\r\n        </Button>\r\n        <Modal\r\n          title={editingRivalId ? 'Добавить соперника' : 'Редактировать'}\r\n          visible={isModalVisible}\r\n          onOk={this.handleModalOk}\r\n          onCancel={this.onModalClose}\r\n        >\r\n          <Input\r\n            placeholder=\"Название команды\"\r\n            defaultValue={name}\r\n            onChange={(e) => this.setState({name: e.target.value})}\r\n            style={{marginBottom: 15}}\r\n          />\r\n          <Input\r\n            placeholder=\"Ссылка на логотип\"\r\n            defaultValue={logo}\r\n            onChange={(e) => this.setState({logo: e.target.value})}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAppContext(Rivals);\r\n","import React from 'react';\r\nimport {Table, Button, Modal, Input, Select, Popconfirm, Form, InputNumber} from 'antd';\r\n\r\nimport {withAppContext} from '../../contexts/AppContext';\r\n\r\nimport {TYPES} from '../../constants/merchTypes';\r\n\r\nimport createTranslitId from '../../utils/createTranslitId';\r\n\r\nimport './Merch.scss';\r\n\r\nconst DEFAULT_MERCH_COUNT = 1;\r\n\r\nclass Merch extends React.Component {\r\n\r\n  state = {\r\n    isModalVisible: false,\r\n    editingMerchId: false,\r\n  };\r\n\r\n  columns = () => {\r\n    const {deleteMerch} = this.props.context;\r\n    return [\r\n      {\r\n        title: 'Название',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Изображение',\r\n        dataIndex: 'image',\r\n        key: 'image',\r\n        render: image => <img src={image} alt={image} width={70}/>\r\n      },\r\n      {\r\n        title: 'Тип',\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        render: type => type.toUpperCase() === TYPES.DIGITAL ? 'Цифровой' : 'Физический'\r\n      },\r\n      {\r\n        title: 'Описание',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n      },\r\n      {\r\n        title: 'Цена',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n      },\r\n      {\r\n        title: 'Действия',\r\n        render: (text, record) => <>\r\n          <Button\r\n            style={{marginRight: 15}}\r\n            onClick={() => this.updateMerch(record.id)}\r\n          >\r\n            Редактировать\r\n          </Button>\r\n          <Popconfirm\r\n            title='Вы уверены?'\r\n            okText='Да'\r\n            cancelText='Нет'\r\n            onConfirm={() => deleteMerch(record.id)}\r\n          >\r\n            <Button type='danger'>Удалить</Button>\r\n          </Popconfirm>\r\n        </>\r\n      }\r\n    ]\r\n  };\r\n\r\n  onModalClose = () => this.setState({\r\n    isModalVisible: false,\r\n    editingMerchId: null,\r\n  });\r\n\r\n  updateMerch = editingMerchId => this.setState({editingMerchId, isModalVisible: true});\r\n\r\n  MerchForm = Form.create({name: 'MerchForm'})(({form}) => {\r\n    const {editingMerchId} = this.state;\r\n    const {getFieldDecorator, validateFields, getFieldValue} = form;\r\n    const {createMerch, updateMerch, state: {merch}} = this.props.context;\r\n    const {name, image, price, description, type} = !!editingMerchId && merch.find(item => item.id === editingMerchId);\r\n    const isDigital = getFieldValue('type') === TYPES.DIGITAL;\r\n    const handleCreateMerch = e => {\r\n      e.preventDefault();\r\n      this.setState({isMatchPosting: true});\r\n      validateFields((err, {name, description, price, image, type, values, count}) => {\r\n        if (!err) {\r\n          const id = editingMerchId || createTranslitId(name.trim());\r\n          const cnt = values ? values.length : count || DEFAULT_MERCH_COUNT;\r\n          if (editingMerchId) {\r\n            updateMerch(id, name.trim(), image, price, description, type, cnt, () => this.setState({\r\n              isModalVisible: false, editingMerchId: false\r\n            }));\r\n          } else {\r\n            createMerch(id, name.trim(), image, price, description, type, values, cnt, () => this.setState({\r\n              isModalVisible: false, editingMerchId: false\r\n            }));\r\n          }\r\n        }\r\n      });\r\n    };\r\n    return (\r\n      <Form onSubmit={handleCreateMerch} className='create-match'>\r\n        <Form.Item>\r\n          {getFieldDecorator('name', {\r\n            rules: [{required: true, message: 'Введите название товара'}],\r\n            initialValue: name || '',\r\n          })(\r\n            <Input placeholder='Название'/>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('image', {\r\n            rules: [{required: true, message: 'Задайте изображение товара'}],\r\n            initialValue: image || '',\r\n          })(\r\n            <Input placeholder='Изображение'/>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('price', {\r\n            rules: [{required: true, message: 'Введите цену товара'}],\r\n            initialValue: price || '',\r\n          })(\r\n            <InputNumber placeholder='Цена' style={{width: '100%'}}/>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('description', {\r\n            rules: [{required: true, message: 'Введите описание товара'}],\r\n            initialValue: description || '',\r\n          })(\r\n            <Input.TextArea placeholder='Описание'/>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('type', {\r\n            rules: [{required: true, message: 'Выберите тип товара'}],\r\n            initialValue: type ? TYPES[type] : TYPES.PHYSICAL,\r\n          })(\r\n            <Select\r\n              placeholder='Тип товара'\r\n            >\r\n              <Select.Option value={TYPES.DIGITAL}>Цифровой</Select.Option>\r\n              <Select.Option value={TYPES.PHYSICAL}>Физический</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        {\r\n          isDigital ?\r\n            <Form.Item>\r\n              {getFieldDecorator('values', {\r\n                rules: [{required: true, message: 'Задайте хотя бы одно значение'}],\r\n              })(\r\n                <Select mode='tags' placeholder='Значения'/>\r\n              )}\r\n            </Form.Item> :\r\n            <Form.Item>\r\n              {getFieldDecorator('count', {\r\n                rules: [{required: true, message: 'Задайте количество товара'}],\r\n              })(\r\n                <InputNumber placeholder='Количество' style={{width: '100%'}}/>\r\n              )}\r\n            </Form.Item>\r\n        }\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            block\r\n          >\r\n            Создать\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  });\r\n\r\n  render() {\r\n    const {MerchForm} = this;\r\n    const {isModalVisible, editingMerchId} = this.state;\r\n    const {merch, isAppLoaded} = this.props.context.state;\r\n    return (\r\n      <div className='merch'>\r\n        <h1>Товары</h1>\r\n        <Table\r\n          dataSource={merch}\r\n          columns={this.columns()}\r\n          rowKey={record => record.id}\r\n          loading={!isAppLoaded}\r\n        />\r\n        <Button\r\n          type='primary'\r\n          onClick={() => this.setState({isModalVisible: true})}\r\n          style={{marginTop: 15}}\r\n        >\r\n          Добавить\r\n        </Button>\r\n        <Modal\r\n          title={editingMerchId ? 'Редактировать' : 'Добавить товар'}\r\n          visible={isModalVisible}\r\n          onCancel={this.onModalClose}\r\n          footer={false}\r\n        >\r\n          <MerchForm/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAppContext(Merch);\r\n","import React from 'react';\r\nimport {Table, Button, Modal, Input, Form, Select} from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport {withAppContext} from '../../contexts/AppContext';\r\n\r\nimport {TYPES} from '../../constants/merchTypes';\r\n\r\nimport './Ordrers.scss';\r\n\r\nconst {Option} = Select;\r\n\r\nconst DELIVERY = {\r\n  MATCH: {\r\n    label: 'Заберу на домашнем матче',\r\n    type: 'MATCH',\r\n  },\r\n  POST: {\r\n    label: 'Почтой',\r\n    type: 'POST',\r\n  }\r\n};\r\n\r\nconst STATUSES = {\r\n  CREATED: 'В обработке',\r\n  AWAITING_EXTRADITION: 'Ожидает выдачи',\r\n  SENDED: 'Отправлено',\r\n  DELIVERED: 'Доставлено'\r\n};\r\n\r\nclass Orders extends React.Component {\r\n\r\n  state = {\r\n    orders: [],\r\n    activeModal: null,\r\n    selectedOrder: null,\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const {orders} = nextProps.context.state;\r\n    if (orders) {\r\n      const prepared = orders.map(({id, userId, orderInfo, status}) => {\r\n        return {id, userId, orderInfo: JSON.parse(orderInfo), status}\r\n      }).map(order => {\r\n        return {\r\n          id: order.id,\r\n          userId: order.userId,\r\n          status: order.status,\r\n          ...order.orderInfo,\r\n          ...JSON.parse(order.orderInfo.deliveryAddress),\r\n        }\r\n      }).sort((a, b) => moment.utc(b.createDateTime).diff(moment.utc(b.createDateTime)));\r\n      return {orders: prepared};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  renderColumns = () => {\r\n    return [\r\n      {\r\n        title: 'Пользователь',\r\n        dataIndex: 'userId',\r\n        render: (dataIndex, {firstName, lastName}) => {\r\n          return (\r\n            <a\r\n              href={`https://vk.com/id${dataIndex}`}\r\n              target='_blank' rel='noopener noreferrer'\r\n            >\r\n              {firstName} {lastName}\r\n            </a>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: 'Товар',\r\n        dataIndex: 'merch',\r\n        render: dataIndex => {\r\n          return (\r\n            <div className='order__merch'>\r\n              <img\r\n                className='order__image'\r\n                src={dataIndex.image}\r\n                alt={dataIndex.name}\r\n              />\r\n              <span>\r\n                {dataIndex.name}\r\n              </span>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: 'Тип доставки',\r\n        dataIndex: 'deliveryType',\r\n        render: (dataIndex, {merch}) => {\r\n          return (\r\n            merch.type === TYPES.DIGITAL ? 'Выдан код' : DELIVERY[dataIndex].label\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: 'Статус',\r\n        dataIndex: 'status',\r\n        render: dataIndex => STATUSES[dataIndex]\r\n      },\r\n      {\r\n        title: 'Дата',\r\n        dataIndex: 'createDateTime',\r\n        render: dataIndex => moment(dataIndex).format('DD.MM.YYYY HH:mm')\r\n      },\r\n      {\r\n        title: 'Действия',\r\n        render: (data, record) => <Button\r\n          onClick={() => this.setState({\r\n            activeModal: true,\r\n            selectedOrder: record.id,\r\n          })}\r\n        >\r\n          Изменить статус\r\n        </Button>\r\n      },\r\n    ];\r\n  };\r\n\r\n  additionalInfoRender = record => {\r\n    const {merch, country, city, address, postIndex, email, phone, comment} = record;\r\n    return (\r\n      <div className='order__info'>\r\n        {\r\n          merch.type === TYPES.PHYSICAL &&\r\n          <div>\r\n            <b>Адрес:</b> {country && country}, {city && city}, {address && address}, {postIndex && postIndex}\r\n          </div>\r\n        }\r\n        {\r\n          email && <div><b>Email:</b> {email}</div>\r\n        }\r\n        {\r\n          phone && <div><b>Телефон:</b> {phone}</div>\r\n        }\r\n        {\r\n          comment && <div><b>Комментарий к заказу:</b> {comment}</div>\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n\r\n  ChangeOrderStatusForm = Form.create({name: 'ChangeOrderStatusForm'})(({form}) => {\r\n    const {changeOrderStatus} = this.props.context;\r\n    const {orders, selectedOrder} = this.state;\r\n    const {getFieldDecorator, validateFields} = form;\r\n    const order = orders.find(item => item.id === selectedOrder);\r\n    const handleCreateMatch = e => {\r\n      e.preventDefault();\r\n      validateFields((err, {status}) => {\r\n        if (!err) changeOrderStatus(selectedOrder, status, () => this.setState({activeModal: false}));\r\n      });\r\n    };\r\n    return (\r\n      <Form onSubmit={handleCreateMatch} className='create-match'>\r\n        <Form.Item>\r\n          <Input disabled defaultValue={`${order.firstName} ${order.lastName}`}/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input disabled defaultValue={order.merch.name}/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Input disabled defaultValue={moment(order.createDateTime).format('DD.MM.YYYY HH:mm')}/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('status', {\r\n            initialValue: order.status,\r\n          })(\r\n            <Select\r\n              placeholder='Статус'\r\n            >\r\n              {\r\n                Object.keys(STATUSES).map(item =>\r\n                  <Option key={item}  value={item}>{STATUSES[item]}</Option>\r\n                )\r\n              }\r\n            </Select>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            className='login-form-button'\r\n            block\r\n          >\r\n            Создать матч\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  });\r\n\r\n  render() {\r\n    const {ChangeOrderStatusForm} = this;\r\n    const {orders, activeModal} = this.state;\r\n    return (\r\n      <div className='orders'>\r\n        <h1>Заказы</h1>\r\n        <Table\r\n          dataSource={orders}\r\n          loading={!this.props.context.state.isAppLoaded}\r\n          columns={this.renderColumns()}\r\n          expandedRowRender={this.additionalInfoRender}\r\n          rowKey={(record) => record.id}\r\n        />\r\n        <Modal\r\n          title='Изменить статус заказа'\r\n          visible={activeModal}\r\n          onCancel={() => this.setState({\r\n            activeModal: false\r\n          })}\r\n          footer={false}\r\n        >\r\n          <ChangeOrderStatusForm/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAppContext(Orders);\r\n","import React from 'react';\r\nimport {Spin, Table} from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport {withAppContext} from '../../contexts/AppContext';\r\n\r\nconst DATE_FORMAT = 'DD.MM.YYYY HH:mm';\r\n\r\nconst Statistics = props => {\r\n  const {statistics, matches, isAppLoaded} = props.context.state;\r\n\r\n  const renderColumns = () => {\r\n    return [\r\n      {\r\n        title: 'Соперник',\r\n        dataIndex: 'rival',\r\n        render: (text, record) => {\r\n          const {rivals} = props.context.state;\r\n          const rival = rivals.find(rival => rival.id === record.rivalId);\r\n          return (\r\n            <>\r\n              {rival && rival.name}\r\n            </>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: 'Начало матча',\r\n        dataIndex: 'startDateTime',\r\n        render: (text, record) => <>\r\n          <span>{moment(record.startDateTime).format(DATE_FORMAT)}</span>\r\n        </>\r\n      },\r\n      {\r\n        title: 'Пролосовали',\r\n        dataIndex: 'hasVote',\r\n        render: (text, {id}) => {\r\n          const stat = statistics.matches.find(({match}) => match === id);\r\n          return stat && (\r\n            <span>{stat.voteAnswers}</span>\r\n          )\r\n        }\r\n      }\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <div className='statistics'>\r\n      <h1>Статистика</h1>\r\n      {\r\n        statistics && isAppLoaded ?\r\n          <div style={{fontSize: 16}}>\r\n            <div>\r\n              <span>Кол-во зарегистрировавшихся: </span><b>{statistics.users}</b>\r\n            </div>\r\n            <div style={{marginBottom: 20}}>\r\n              <span>Кол-во голосовавших пользователей: </span><b>{statistics.activeUsers}</b>\r\n            </div>\r\n            <Table\r\n              columns={renderColumns()}\r\n              dataSource={matches.sort((a, b) => moment.utc(b.startDateTime).diff(moment.utc(a.startDateTime)))}\r\n              rowKey={record => record.id}\r\n              pagination={{pageSize: 20}}\r\n            />\r\n          </div> : <Spin size='large'/>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withAppContext(Statistics)\r\n","import React from 'react';\r\nimport {Input, Button, List, Spin} from 'antd';\r\n\r\nimport {withAppContext} from '../../contexts/AppContext';\r\n\r\nimport './Notifications.scss';\r\nimport moment from 'moment';\r\n\r\nclass Notifications extends React.Component {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {\r\n      state: {\r\n        notifications,\r\n      },\r\n      fetchNotifications,\r\n    } = this.props.context;\r\n    if (!notifications) {\r\n      fetchNotifications();\r\n    }\r\n  }\r\n\r\n  setMessage = e => {\r\n    if (this.state.message.length < 250) {\r\n      this.setState({message: e.currentTarget.value})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      createNotification,\r\n      state: { notifications }\r\n    } = this.props.context;\r\n    const {message} = this.state;\r\n    return (\r\n      <div className='notifications'>\r\n        <h1>Создать уведомление</h1>\r\n        <div style={{width: 350, marginBottom: 30}}>\r\n          <Input.TextArea\r\n            rows={4}\r\n            value={message}\r\n            onChange={this.setMessage}\r\n          />\r\n          <span style={{paddingBottom: 20}}>{message.length} / 250</span>\r\n          <Button\r\n            block\r\n            type='primary'\r\n            disabled={!message.length}\r\n            onClick={() => createNotification(message)}\r\n          >\r\n            Отправить уведомление\r\n          </Button>\r\n        </div>\r\n        <h1>Уведомления</h1>\r\n        {\r\n          notifications ?\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            dataSource={notifications.sort((a, b) => moment.utc(b.createDateTime).diff(moment.utc(a.createDateTime)))}\r\n            renderItem={item => {\r\n              const {initiator, successful, failed, total} = JSON.parse(item.info);\r\n              return (\r\n                <List.Item\r\n                  key={item.createDateTime}\r\n                  actions={[\r\n                    <span>Успешно: {successful}</span>,\r\n                    <span>Ошибка: {failed}</span>,\r\n                    <span>Итого: {total}</span>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    title={`${initiator} (${moment(item.createDateTime).format('DD.MM.YYYY HH:mm')})`}\r\n                    description={item.message}\r\n                  />\r\n                </List.Item>\r\n              )\r\n            }}\r\n          /> : <Spin/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAppContext(Notifications)\r\n","import React from 'react';\r\nimport {Button, Input} from 'antd';\r\n\r\nimport './Login.scss';\r\n\r\nclass Login extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: null,\r\n      password: null,\r\n      error: false,\r\n    };\r\n    this.logins = ['admin'];\r\n    this.passwords = ['admin'];\r\n  }\r\n\r\n  login = () => {\r\n    const {login, password} = this.state;\r\n    if (this.logins.includes(login) && this.passwords.includes(password)) {\r\n      localStorage.setItem('isAuth', 'true');\r\n      window.location.reload();\r\n    } else {\r\n      this.setState({error: true})\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {login, password, error} = this.state;\r\n    return (\r\n      <main className='login'>\r\n        <form\r\n          className='login-form'\r\n          onSubmit={this.login}\r\n        >\r\n          <h1 className='login-form__heading'>Вход</h1>\r\n          <label className='login-form__label'>\r\n            <Input\r\n              placeholder='Логин'\r\n              value={login}\r\n              onChange={({currentTarget: {value}}) => this.setState({login: value})}\r\n            />\r\n          </label>\r\n          <label className='login-form__label'>\r\n            <Input\r\n              type='password'\r\n              placeholder='Пароль'\r\n              value={password}\r\n              onChange={({currentTarget: {value}}) => this.setState({password: value})}\r\n            />\r\n          </label>\r\n          <Button\r\n            type='primary'\r\n            onClick={this.login}\r\n          >\r\n            Войти\r\n          </Button>\r\n          {\r\n            error && <div className='login-form__error'>\r\n              Неверный логин или пароль.\r\n            </div>\r\n          }\r\n        </form>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport {withRouter, Route, Link} from 'react-router-dom';\r\nimport {Layout, Menu, Button} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Matches from '../../pages/Matches';\r\nimport Rivals from '../../pages/Rivals';\r\nimport Merch from '../../pages/Merch';\r\nimport Orders from '../../pages/Orders';\r\nimport Statistics from '../../pages/Statistics';\r\nimport Notifications from '../../pages/Notifications';\r\nimport Login from '../../pages/Login';\r\n\r\nimport Logo from '../../img/logo.svg';\r\n\r\nconst {Header, Content, Footer} = Layout;\r\nconst {Item} = Menu;\r\n\r\nconst App = ({location: {pathname}}) => {\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  return localStorage.getItem('isAuth') === 'true' ?\r\n    <Layout style={{minHeight: '100vh'}}>\r\n      <Header style={{position: 'fixed', zIndex: 1, width: '100%'}}>\r\n        <img className='logo' src={Logo} alt='Зенит' style={{width: 80}}/>\r\n        <div\r\n          style={{\r\n            float: 'right',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Menu\r\n            theme='dark'\r\n            mode='horizontal'\r\n            defaultSelectedKeys={[pathname.slice(1)]}\r\n            defaultOpenKeys={[pathname.slice(1)]}\r\n            style={{lineHeight: '64px'}}\r\n          >\r\n            <Item key='notifications'>\r\n              <Link to='/notifications'>Уведомления</Link>\r\n            </Item>\r\n            <Item key='statistics'>\r\n              <Link to='/statistics'>Статистика</Link>\r\n            </Item>\r\n            <Item key='matches'>\r\n              <Link to='/matches'>Матчи</Link>\r\n            </Item>\r\n            <Item key='rivals'>\r\n              <Link to='/rivals'>Соперники</Link>\r\n            </Item>\r\n            <Item key='merch'>\r\n              <Link to='/merch'>Товары</Link>\r\n            </Item>\r\n            <Item key='orders'>\r\n              <Link to='/orders'>Заказы</Link>\r\n            </Item>\r\n          </Menu>\r\n          <Button\r\n            type='danger'\r\n            onClick={logout}\r\n            style={{marginLeft: 15}}\r\n          >\r\n            Выход\r\n          </Button>\r\n        </div>\r\n      </Header>\r\n      <Content style={{padding: '0 50px', marginTop: 64}}>\r\n        <div style={{padding: 24, marginTop: 30, background: '#fff', minHeight: 360}}>\r\n          <Route path={['/', '/matches']} exact component={Matches}/>\r\n          <Route path='/rivals' exact component={Rivals}/>\r\n          <Route path='/merch' exact component={Merch}/>\r\n          <Route path='/orders' exact component={Orders}/>\r\n          <Route path='/statistics' exact component={Statistics}/>\r\n          <Route path='/notifications' exact component={Notifications}/>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{textAlign: 'center'}}>tweek4000@yandex.ru © 2019</Footer>\r\n    </Layout> : <Login/>;\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport AppProvider from './contexts/AppContext';\r\n\r\nconst Application = () => {\r\n  return (\r\n    <HashRouter>\r\n      <AppProvider>\r\n        <App/>\r\n      </AppProvider>\r\n    </HashRouter>\r\n  )\r\n};\r\n\r\nReactDOM.render(<Application />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}